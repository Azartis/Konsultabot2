# Generated by Django 4.2.7 on 2025-10-15 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('response_time', 'Response Time'), ('error_rate', 'Error Rate'), ('uptime', 'System Uptime'), ('memory_usage', 'Memory Usage'), ('cpu_usage', 'CPU Usage'), ('api_calls', 'API Calls'), ('gemini_availability', 'Gemini API Availability')], max_length=30)),
                ('value', models.FloatField()),
                ('unit', models.CharField(default='', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'timestamp'], name='analytics_s_metric__4088e2_idx')],
            },
        ),
        migrations.CreateModel(
            name='QueryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('response_text', models.TextField(blank=True)),
                ('response_source', models.CharField(choices=[('gemini', 'Gemini AI'), ('gemini_enhanced', 'Gemini Enhanced'), ('knowledge_base', 'Knowledge Base'), ('local_intelligence', 'Local Intelligence'), ('offline_knowledge_base', 'Offline Knowledge Base'), ('generic_fallback', 'Generic Fallback'), ('error', 'Error Response')], max_length=30)),
                ('response_mode', models.CharField(choices=[('online', 'Online Processing'), ('offline', 'Offline Processing'), ('offline_fallback', 'Offline Fallback'), ('hybrid', 'Hybrid Processing'), ('error', 'Error Mode')], default='online', max_length=20)),
                ('processing_time', models.FloatField(default=0.0)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('language', models.CharField(choices=[('english', 'English'), ('tagalog', 'Tagalog'), ('bisaya', 'Bisaya'), ('waray', 'Waray'), ('spanish', 'Spanish')], default='english', max_length=20)),
                ('translation_used', models.BooleanField(default=False)),
                ('intent_detected', models.CharField(blank=True, max_length=50)),
                ('entities_extracted', models.JSONField(blank=True, default=dict)),
                ('satisfaction_score', models.IntegerField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('fallback_used', models.BooleanField(default=False)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OfflineQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('language', models.CharField(default='english', max_length=20)),
                ('is_processed', models.BooleanField(default=False)),
                ('response', models.TextField(blank=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('rating', 'Star Rating'), ('thumbs', 'Thumbs Up/Down'), ('comment', 'Text Comment'), ('bug_report', 'Bug Report'), ('feature_request', 'Feature Request')], max_length=20)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('is_positive', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('priority', models.CharField(default='medium', max_length=20)),
                ('is_resolved', models.BooleanField(default=False)),
                ('admin_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('query_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='analytics.querylog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_queries', models.IntegerField(default=0)),
                ('unique_users', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('gemini_queries', models.IntegerField(default=0)),
                ('kb_queries', models.IntegerField(default=0)),
                ('offline_queries', models.IntegerField(default=0)),
                ('error_queries', models.IntegerField(default=0)),
                ('english_queries', models.IntegerField(default=0)),
                ('tagalog_queries', models.IntegerField(default=0)),
                ('bisaya_queries', models.IntegerField(default=0)),
                ('waray_queries', models.IntegerField(default=0)),
                ('spanish_queries', models.IntegerField(default=0)),
                ('avg_satisfaction', models.FloatField(blank=True, null=True)),
                ('positive_feedback', models.IntegerField(default=0)),
                ('negative_feedback', models.IntegerField(default=0)),
                ('uptime_percentage', models.FloatField(default=100.0)),
                ('api_success_rate', models.FloatField(default=100.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='analytics_d_date_db3351_idx')],
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('gemini', 'Google Gemini'), ('google_speech', 'Google Cloud Speech'), ('google_translate', 'Google Cloud Translate'), ('google_tts', 'Google Cloud Text-to-Speech')], max_length=30)),
                ('endpoint', models.CharField(blank=True, max_length=100)),
                ('request_size', models.IntegerField(default=0)),
                ('response_size', models.IntegerField(default=0)),
                ('response_time', models.FloatField(default=0.0)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('http_status', models.IntegerField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['service', 'timestamp'], name='analytics_a_service_93a3bd_idx'), models.Index(fields=['success'], name='analytics_a_success_8d551b_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('message_count', models.IntegerField(default=0)),
                ('voice_messages', models.IntegerField(default=0)),
                ('languages_used', models.JSONField(blank=True, default=list)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['user', 'start_time'], name='analytics_u_user_id_4a09ce_idx'), models.Index(fields=['session_id'], name='analytics_u_session_1131bd_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['created_at'], name='analytics_q_created_9e28f5_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['response_source'], name='analytics_q_respons_4398bf_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['language'], name='analytics_q_languag_494301_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['intent_detected'], name='analytics_q_intent__e074a7_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['user', 'created_at'], name='analytics_q_user_id_1fab7f_idx'),
        ),
        migrations.AddIndex(
            model_name='offlinequery',
            index=models.Index(fields=['user', 'is_processed'], name='analytics_o_user_id_5b0316_idx'),
        ),
        migrations.AddIndex(
            model_name='offlinequery',
            index=models.Index(fields=['created_at'], name='analytics_o_created_49956c_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackreport',
            index=models.Index(fields=['feedback_type', 'created_at'], name='analytics_f_feedbac_556186_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbackreport',
            index=models.Index(fields=['is_resolved'], name='analytics_f_is_reso_83ac7d_idx'),
        ),
    ]
