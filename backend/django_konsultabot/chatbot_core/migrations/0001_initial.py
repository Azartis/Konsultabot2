# Generated by Django 4.2.7 on 2025-10-15 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('language', models.CharField(default='english', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='QuickAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='help-circle', max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('query_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-usage_count', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SessionContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_language', models.CharField(default='english', max_length=20)),
                ('voice_enabled', models.BooleanField(default=False)),
                ('notification_preferences', models.JSONField(blank=True, default=dict)),
                ('current_topic', models.CharField(blank=True, max_length=100)),
                ('unresolved_issues', models.JSONField(blank=True, default=list)),
                ('follow_up_needed', models.BooleanField(default=False)),
                ('user_device_type', models.CharField(blank=True, max_length=50)),
                ('operating_system', models.CharField(blank=True, max_length=50)),
                ('reported_issues', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='context', to='chatbot_core.conversationsession')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'User'), ('bot', 'Bot'), ('system', 'System')], max_length=10)),
                ('message', models.TextField()),
                ('message_type', models.CharField(default='text', max_length=20)),
                ('response_source', models.CharField(blank=True, choices=[('gemini', 'Gemini AI'), ('knowledge_base', 'Knowledge Base'), ('local_intelligence', 'Local Intelligence'), ('hybrid', 'Hybrid Response'), ('system', 'System Message')], max_length=20, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('intent_detected', models.CharField(blank=True, max_length=50)),
                ('entities_extracted', models.JSONField(blank=True, default=dict)),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot_core.conversationsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='conversationsession',
            index=models.Index(fields=['user', '-last_activity'], name='chatbot_cor_user_id_c7e53b_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationsession',
            index=models.Index(fields=['session_id'], name='chatbot_cor_session_bdb8a7_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', 'timestamp'], name='chatbot_cor_session_40a523_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender', 'timestamp'], name='chatbot_cor_sender_813129_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['response_source'], name='chatbot_cor_respons_3b716e_idx'),
        ),
    ]
